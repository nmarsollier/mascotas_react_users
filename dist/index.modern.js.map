{"version":3,"file":"index.modern.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/api/userApi.ts","../src/components/LoginUser.tsx","../src/components/ChangeUserPassword.tsx","../src/components/RegisterUser.tsx"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { environment } from \"mascotas_react_common\";\nimport { cleanupStore, updateStoreToken, updateStoreUser, securedAxios } from \"mascotas_react_store\";\nimport { AxiosError } from \"axios\";\n\n\nexport function getCurrentToken(): string | undefined {\n    const result = localStorage.getItem(\"token\");\n    return result ? result : undefined;\n}\n\nfunction setCurrentToken(token: string) {\n    localStorage.setItem(\"token\", token);\n}\n\nexport function getCurrentUser(): User | undefined {\n    return (localStorage.getItem(\"user\") as unknown) as User;\n}\n\nexport async function logout(): Promise<void> {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n\n    try {\n        await securedAxios().get(environment.backendUrl + \"/v1/user/signout\");\n\n        return Promise.resolve();\n    } catch (err) {\n        return Promise.resolve();\n    } finally {\n        cleanupStore()\n    }\n}\n\nexport interface Login {\n    login: string;\n    password: string;\n}\n\nexport interface Token {\n    token: string;\n}\n\nexport async function login(payload: Login): Promise<Token> {\n    try {\n        const res = await securedAxios().post(environment.backendUrl + \"/v1/user/signin\", payload);\n        updateStoreToken(res.data.token)\n        setCurrentToken(res.data.token);\n        reloadCurrentUser().then();\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n\nexport interface User {\n    id: string;\n    name: string;\n    login: string;\n    permissions: string[];\n}\n\nexport async function reloadCurrentUser(): Promise<User> {\n    try {\n        const res = await securedAxios().get(environment.backendUrl + \"/v1/users/current\");\n        localStorage.setItem(\"user\", res.data);\n        updateStoreUser(res.data);\n        return Promise.resolve(res.data);\n    } catch (err) {\n        if ((err as AxiosError) && err.response && err.response.status === 401) {\n            logout();\n        }\n        return Promise.reject(err);\n    }\n}\n\nexport interface SignUpRequest {\n    name: string;\n    password: string;\n    login: string;\n}\n\nexport async function newUser(payload: SignUpRequest): Promise<Token> {\n    try {\n        const res = await securedAxios().post(environment.backendUrl + \"/v1/user\", payload);\n        updateStoreToken(res.data.token)\n        setCurrentToken(res.data.token);\n        reloadCurrentUser().then();\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n\nexport interface ChangePassword {\n    currentPassword: string;\n    newPassword: string;\n}\n\nexport async function changePassword(payload: ChangePassword): Promise<void> {\n    try {\n        const res = await securedAxios().post(environment.backendUrl + \"/v1/user/password\", payload);\n        return Promise.resolve(res.data);\n    } catch (err) {\n        if ((err as AxiosError) && err.response && err.response.status === 401) {\n            logout();\n        }\n        return Promise.reject(err);\n    }\n}\n\n/**\n * Si existen los tokens en la db del browser, inicializar el store\n */\nif (getCurrentToken() !== undefined) {\n    const currentToken = getCurrentToken()\n    const currentUser = getCurrentUser()\n    if (currentToken !== undefined && currentUser !== undefined) {\n        updateStoreToken(currentToken)\n        updateStoreUser(currentUser)\n        reloadCurrentUser().then();\n    }\n}","import { DangerLabel, Form, FormAcceptButton, FormButton, FormButtonBar, FormInput, FormTitle, GlobalContent, FormPassword } from \"mascotas_react_common\";\nimport React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useErrorHandler } from \"mascotas_react_common\";\nimport { goHome } from \"mascotas_react_common\";\nimport { login } from \"../api/userApi\";\n\nexport function LoginUser(props: RouteComponentProps) {\n    const [userName, setUserName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const errorHandler = useErrorHandler()\n\n    const loginClick = async () => {\n        errorHandler.cleanRestValidations();\n        if (!userName) {\n            errorHandler.addError(\"login\", \"No puede estar vacío\");\n        }\n        if (!password) {\n            errorHandler.addError(\"password\", \"No puede estar vacío\");\n        }\n        if (errorHandler.hasErrors()) {\n            return;\n        }\n\n        try {\n            await login({\n                login: userName,\n                password\n            });\n            goHome(props)\n        } catch (error) {\n            errorHandler.processRestValidations(error);\n        }\n    }\n\n    return (\n        <GlobalContent>\n            <FormTitle>Login</FormTitle>\n\n            <Form>\n                <FormInput\n                    label=\"Usuario\"\n                    name=\"login\"\n                    errorHandler={errorHandler}\n                    onChange={(event) => setUserName(event.target.value)} />\n\n                <FormPassword\n                    label=\"Password\"\n                    name=\"password\"\n                    errorHandler={errorHandler}\n                    onChange={(event) => setPassword(event.target.value)} />\n\n                <DangerLabel message={errorHandler.errorMessage} />\n\n                <FormButtonBar>\n                    <FormAcceptButton label=\"Login\" onClick={loginClick} />\n                    <FormButton label=\"Cancelar\" onClick={() => goHome(props)} />\n                </FormButtonBar>\n            </Form >\n        </GlobalContent >\n    );\n}\n","import { DangerLabel, Form, FormAcceptButton, FormButton, FormButtonBar, FormPassword, FormTitle, GlobalContent, goHome, useErrorHandler } from \"mascotas_react_common\";\nimport React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { changePassword } from \"../api/userApi\";\n\nexport function ChangeUserPassword(props: RouteComponentProps) {\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [newPassword2, setNewPassword2] = useState(\"\")\n\n    const errorHandler = useErrorHandler()\n\n    const updatePasswordClick = async () => {\n        errorHandler.cleanRestValidations();\n\n        if (!currentPassword) {\n            errorHandler.addError(\"currentPassword\", \"No puede estar vacío\");\n        }\n        if (!newPassword) {\n            errorHandler.addError(\"newPassword\", \"No puede estar vacío\");\n        }\n        if (newPassword !== newPassword2) {\n            errorHandler.addError(\"newPassword2\", \"Las contraseñas no coinciden\");\n        }\n\n        if (errorHandler.hasErrors()) {\n            return\n        }\n\n        try {\n            await changePassword({\n                currentPassword,\n                newPassword\n            });\n            goHome(props)\n        } catch (error) {\n            errorHandler.processRestValidations(error);\n        }\n    }\n\n    return (\n        <GlobalContent>\n            <FormTitle>Cambiar Password</FormTitle>\n\n            <Form>\n                <FormPassword\n                    label=\"Password Actual\"\n                    name=\"currentPassword\"\n                    errorHandler={errorHandler}\n                    onChange={event => setCurrentPassword(event.target.value)} />\n\n                <FormPassword\n                    label=\"Nuevo Password\"\n                    name=\"newPassword\"\n                    errorHandler={errorHandler}\n                    onChange={event => setNewPassword(event.target.value)} />\n\n                <FormPassword\n                    label=\"Repetir Password\"\n                    name=\"newPassword2\"\n                    errorHandler={errorHandler}\n                    onChange={event => setNewPassword2(event.target.value)} />\n\n                <DangerLabel message={errorHandler.errorMessage} />\n\n                <FormButtonBar>\n                    <FormAcceptButton label=\"Cambiar\" onClick={updatePasswordClick} />\n                    <FormButton label=\"Cancelar\" onClick={() => goHome(props)} />\n                </FormButtonBar>\n            </Form >\n        </GlobalContent>\n    );\n}\n","import { DangerLabel, Form, FormAcceptButton, FormButton, FormButtonBar, FormInput, FormPassword, FormTitle, GlobalContent, goHome, useErrorHandler } from \"mascotas_react_common\";\nimport React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { newUser } from \"../api/userApi\";\n\nexport function RegisterUser(props: RouteComponentProps) {\n    const [login, setLogin] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [password2, setPassword2] = useState(\"\")\n\n    const errorHandler = useErrorHandler()\n\n    const registerClick = async () => {\n        errorHandler.cleanRestValidations();\n        if (!login) {\n            errorHandler.addError(\"login\", \"No puede estar vacío\");\n        }\n        if (!name) {\n            errorHandler.addError(\"name\", \"No puede estar vacío\");\n        }\n        if (!password) {\n            errorHandler.addError(\"password\", \"No puede estar vacío\");\n        }\n        if (password !== password2) {\n            errorHandler.addError(\"password2\", \"Las contraseñas no coinciden\");\n        }\n\n        if (errorHandler.hasErrors()) {\n            return;\n        }\n\n        try {\n            await newUser({\n                login,\n                name,\n                password,\n            });\n            goHome(props)\n        } catch (error) {\n            errorHandler.processRestValidations(error);\n        }\n    }\n\n    return (\n        <GlobalContent>\n            <FormTitle>Registrar Usuario</FormTitle>\n\n            <Form>\n                <FormInput\n                    label=\"Login\"\n                    name=\"login\"\n                    value={login}\n                    errorHandler={errorHandler}\n                    onChange={e => setLogin(e.target.value)} />\n\n                <FormInput\n                    label=\"Usuario\"\n                    name=\"name\"\n                    value={name}\n                    errorHandler={errorHandler}\n                    onChange={e => setName(e.target.value)} />\n\n                <FormPassword\n                    label=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    errorHandler={errorHandler}\n                    onChange={e => setPassword(e.target.value)} />\n\n                <FormPassword\n                    label=\"Repetir Password\"\n                    name=\"password2\"\n                    value={password2}\n                    errorHandler={errorHandler}\n                    onChange={e => setPassword2(e.target.value)} />\n\n                <DangerLabel message={errorHandler.errorMessage} />\n\n                <FormButtonBar>\n                    <FormAcceptButton label=\"Registrarse\" onClick={registerClick} />\n                    <FormButton label=\"Cancelar\" onClick={() => goHome(props)} />\n                </FormButtonBar>\n            </Form >\n        </GlobalContent>\n    );\n}\n"],"names":["changePassword","payload","securedAxios","post","environment","backendUrl","res","Promise","resolve","data","err","response","status","logout","reject","newUser","updateStoreToken","token","setCurrentToken","reloadCurrentUser","then","get","localStorage","setItem","updateStoreUser","login","removeItem","cleanupStore","getCurrentToken","result","getItem","undefined","getCurrentUser","currentToken","currentUser","LoginUser","props","useState","userName","setUserName","password","setPassword","errorHandler","useErrorHandler","loginClick","cleanRestValidations","addError","hasErrors","goHome","error","processRestValidations","event","target","value","errorMessage","ChangeUserPassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","updatePasswordClick","RegisterUser","setLogin","name","setName","password2","setPassword2","registerClick","e"],"mappings":"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"}